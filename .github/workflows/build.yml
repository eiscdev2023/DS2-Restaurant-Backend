name: test-nodejs-app

on:
  push:
    branches:
      - feature_fix
  pull_request:
    branches:
      - develop

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: node:10.18-jessie

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
          POSTGRES_HOST: ${{ secrets.PG_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_PORT: 5432
          POSTGRES_USER: ${{ secrets.PG_USER }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      - name: Query database
        run: psql -h ${{ env.POSTGRES_HOST }} -d ${{ env.POSTGRES_DB }} -U ${{ env.POSTGRES_USER }} -c 'SELECT 1;'
        env:
          PGPASSWORD: ${{ secrets.PG_PASSWORD }}

      - name: Slack Notification (Starting)
        uses: act10ns/slack@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: starting
          channel: '#actions'
          message: Starting Build and Test...
        if: always()

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Run ESlint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: SonarCloud Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Slack Notification (Success)
        uses: act10ns/slack@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: success
          channel: '#actions'
          message: Tests end successfully
        if: success()
