name: Test Node.js App

on:
  push:
    branches:
      - feature_fix
  pull_request:
    branches:
      - develop

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: node:10.18-jessie

    services:
      postgres:
        image: postgres:12
        env: 
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
          POSTGRES_HOST: ${{ secrets.PG_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_USER: ${{ secrets.PG_USER }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Slack Notification (Starting)
      uses: act10ns/slack@v1
      with: 
        webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        status: starting
        channel: '#actions'
        message: Starting Build and Test...
      if: always()

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install dependencies
      run: npm install

    - name: connect to PostgresSQL
      run: node ./src/config/database.js
      env: 
        POSTGRES_HOST: ${{ secrets.PG_HOST }}
        POSTGRES_PORT: 5432
        POSTGRES_DB: ${{ secrets.PG_DATABASE }}
        POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
        POSTGRES_USER: ${{ secrets.PG_USER }}


    #- name: Install pgmigrate
    #  run: npm install node-pg-migrate pg

    #- name: Run migration
    #  run: npm run migrate

    - name: Run ESlint
      run: npm run lint
    
    - name: Run tests
      run: npm test 

    - name: SonarCloud Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Slack Notification (Success)
      uses: act10ns/slack@v1
      with: 
        webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        status: success
        channel: '#actions'
        message: Tests end successfully
      if: success()
